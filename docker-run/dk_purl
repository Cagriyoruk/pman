#!/usr/bin/env python3

import  argparse
import  os

str_desc = """

    NAME

        dk_purl

    SYNOPSIS

        dk_purl         [-d <container>]                                \\
                        [--pman || --phioh]                             \\
                        --msg <JSON_payload>                            \\
                        [... cmd line parameters to contained purl ]

    DESCRIPTION

        'dk_purl' is a helper script that sends containerized 'purl'
        payloads to a containerized instance of either 'pman' or 'pfioh'.

        By default, and in the simplest case, this script only needs a
        payload --msg arg and a destination --pman or --pfioh arg.

        Any normal 'purl' argument can be specified, and will
        override an underlying default.

"""

parser  = argparse.ArgumentParser(description = str_desc)


parser.add_argument(
    '-c',
    action  = 'store',
    dest    = 'str_container',
    default = 'fnndsc/pman',
    help    = 'the container image to instantiate.',
)

parser.add_argument(
    '--pman',
    action  = 'store_true',
    dest    = 'b_pman',
    default = False,
    help    = 'if specified, indicates to transmit to a linked <pman> container.',
)

parser.add_argument(
    '--pfioh',
    action  = 'store_true',
    dest    = 'b_pfioh',
    default = False,
    help    = 'if specified, indicates to transmit to a linked <pfioh> container.',
)

parser.add_argument(
    '--msg',
    action  = 'store',
    dest    = 'msg',
    default = '',
    help    = 'JSON msg payload'
)

args, unknown   = parser.parse_known_args()

if __name__ == '__main__':

    str_link = ''
    if args.b_pfioh:
        str_link = '--link pman:pfioh'
    if args.b_pman:
        str_link = '--link pman:pman'

    str_otherArgs   = ' '.join(unknown)
    str_cmd         = 'docker run %s -v /home:/Users --rm -ti %s purl --msg \'%s\' %s' % (str_link, args.str_container, args.msg, str_otherArgs)
    print(str_cmd)
    os.system(str_cmd)

